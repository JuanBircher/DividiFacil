// <auto-generated />
using System;
using DividiFacil.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DividiFacil.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250622203008_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DividiFacil.Domain.Models.CajaComun", b =>
                {
                    b.Property<Guid>("IdCaja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("IdGrupo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Saldo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.HasKey("IdCaja");

                    b.HasIndex("IdGrupo")
                        .IsUnique();

                    b.ToTable("CajasComunes", (string)null);
                });

            modelBuilder.Entity("DividiFacil.Domain.Models.DetalleGasto", b =>
                {
                    b.Property<Guid>("IdDetalleGasto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdGasto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdMiembroDeudor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Pagado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("UsuarioIdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdDetalleGasto");

                    b.HasIndex("IdGasto");

                    b.HasIndex("IdMiembroDeudor");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("DetallesGasto", (string)null);
                });

            modelBuilder.Entity("DividiFacil.Domain.Models.Gasto", b =>
                {
                    b.Property<Guid>("IdGasto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Categoria")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ComprobantePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("FechaGasto")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdGrupo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdMiembroPagador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("UsuarioIdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdGasto");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdMiembroPagador");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("Gastos", (string)null);
                });

            modelBuilder.Entity("DividiFacil.Domain.Models.Grupo", b =>
                {
                    b.Property<Guid>("IdGrupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoAcceso")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("IdUsuarioCreador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModoOperacion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Estandar");

                    b.Property<string>("NombreGrupo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdGrupo");

                    b.HasIndex("IdUsuarioCreador");

                    b.ToTable("Grupos", (string)null);
                });

            modelBuilder.Entity("DividiFacil.Domain.Models.MiembroGrupo", b =>
                {
                    b.Property<Guid>("IdMiembro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaUnion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("IdGrupo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Miembro");

                    b.HasKey("IdMiembro");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("MiembrosGrupo", (string)null);
                });

            modelBuilder.Entity("DividiFacil.Domain.Models.MovimientoCaja", b =>
                {
                    b.Property<Guid>("IdMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ComprobantePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("IdCaja")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoMovimiento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdMovimiento");

                    b.HasIndex("IdCaja");

                    b.HasIndex("IdUsuario");

                    b.ToTable("MovimientosCaja", (string)null);
                });

            modelBuilder.Entity("DividiFacil.Domain.Models.Notificacion", b =>
                {
                    b.Property<string>("CanalEnvio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GrupoIdGrupo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdGrupo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNotificacion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UsuarioIdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("GrupoIdGrupo");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("Notificaciones");
                });

            modelBuilder.Entity("DividiFacil.Domain.Models.Pago", b =>
                {
                    b.Property<Guid>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ComprobantePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pendiente");

                    b.Property<DateTime?>("FechaConfirmacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdGrupo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPagador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdReceptor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MotivoRechazo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("IdPago");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdPagador");

                    b.HasIndex("IdReceptor");

                    b.ToTable("Pagos", (string)null);
                });

            modelBuilder.Entity("DividiFacil.Domain.Models.Usuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("IdExterno")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProveedorAuth")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TokenNotificacion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UrlImagen")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("DividiFacil.Domain.Models.CajaComun", b =>
                {
                    b.HasOne("DividiFacil.Domain.Models.Grupo", "Grupo")
                        .WithOne("CajaComun")
                        .HasForeignKey("DividiFacil.Domain.Models.CajaComun", "IdGrupo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("DividiFacil.Domain.Models.DetalleGasto", b =>
                {
                    b.HasOne("DividiFacil.Domain.Models.Gasto", "Gasto")
                        .WithMany("DetallesGasto")
                        .HasForeignKey("IdGasto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DividiFacil.Domain.Models.MiembroGrupo", "MiembroDeudor")
                        .WithMany()
                        .HasForeignKey("IdMiembroDeudor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DividiFacil.Domain.Models.Usuario", null)
                        .WithMany("DetallesGasto")
                        .HasForeignKey("UsuarioIdUsuario");

                    b.Navigation("Gasto");

                    b.Navigation("MiembroDeudor");
                });

            modelBuilder.Entity("DividiFacil.Domain.Models.Gasto", b =>
                {
                    b.HasOne("DividiFacil.Domain.Models.Grupo", "Grupo")
                        .WithMany("Gastos")
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DividiFacil.Domain.Models.MiembroGrupo", "MiembroPagador")
                        .WithMany()
                        .HasForeignKey("IdMiembroPagador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DividiFacil.Domain.Models.Usuario", null)
                        .WithMany("GastosPagados")
                        .HasForeignKey("UsuarioIdUsuario");

                    b.Navigation("Grupo");

                    b.Navigation("MiembroPagador");
                });

            modelBuilder.Entity("DividiFacil.Domain.Models.Grupo", b =>
                {
                    b.HasOne("DividiFacil.Domain.Models.Usuario", "UsuarioCreador")
                        .WithMany("GruposCreados")
                        .HasForeignKey("IdUsuarioCreador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UsuarioCreador");
                });

            modelBuilder.Entity("DividiFacil.Domain.Models.MiembroGrupo", b =>
                {
                    b.HasOne("DividiFacil.Domain.Models.Grupo", "Grupo")
                        .WithMany("Miembros")
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DividiFacil.Domain.Models.Usuario", "Usuario")
                        .WithMany("MiembrosGrupo")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DividiFacil.Domain.Models.MovimientoCaja", b =>
                {
                    b.HasOne("DividiFacil.Domain.Models.CajaComun", "Caja")
                        .WithMany("Movimientos")
                        .HasForeignKey("IdCaja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DividiFacil.Domain.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Caja");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DividiFacil.Domain.Models.Notificacion", b =>
                {
                    b.HasOne("DividiFacil.Domain.Models.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoIdGrupo");

                    b.HasOne("DividiFacil.Domain.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioIdUsuario");

                    b.Navigation("Grupo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DividiFacil.Domain.Models.Pago", b =>
                {
                    b.HasOne("DividiFacil.Domain.Models.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DividiFacil.Domain.Models.MiembroGrupo", "Pagador")
                        .WithMany()
                        .HasForeignKey("IdPagador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DividiFacil.Domain.Models.MiembroGrupo", "Receptor")
                        .WithMany()
                        .HasForeignKey("IdReceptor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Pagador");

                    b.Navigation("Receptor");
                });

            modelBuilder.Entity("DividiFacil.Domain.Models.CajaComun", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("DividiFacil.Domain.Models.Gasto", b =>
                {
                    b.Navigation("DetallesGasto");
                });

            modelBuilder.Entity("DividiFacil.Domain.Models.Grupo", b =>
                {
                    b.Navigation("CajaComun");

                    b.Navigation("Gastos");

                    b.Navigation("Miembros");
                });

            modelBuilder.Entity("DividiFacil.Domain.Models.Usuario", b =>
                {
                    b.Navigation("DetallesGasto");

                    b.Navigation("GastosPagados");

                    b.Navigation("GruposCreados");

                    b.Navigation("MiembrosGrupo");
                });
#pragma warning restore 612, 618
        }
    }
}
